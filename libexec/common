#!/usr/bin/env bash

# If script doesn't run all the way to the end,
# it will exit 2 == SIGINT (Interrupt)
# http://steve-parker.org/sh/trap.shtml
#
complain_if_interrupted() {
  trap "exit 2" 1 2 3 13 15
}

# Something went very wrong, kill the script
#
error() {
  echo "$txtred$1$txtrst"
  exit 1
}

# If a command fails, fail the whole script
#
fail() {
  echo -e "$bldred FAIL $txtrst\n"
  exit 1
}

latest() {
  echo -e "$bldgrn LATEST DEPLOYED $txtrst\n"
  exit 0
}

# Successful command
#
success() {
  echo "$bldgrn DONE $txtrst"
}

# Loads the .deliver file
#
load_app_config() {
  if [ ! -f $APP_CONFIG ]; then
    error "Could not find a .deliver file in the current directory"
  else
    . $APP_CONFIG
  fi
}

# Progress indicator when running commands in the background
#
__progress() {
  local message=$1
  local style=${2:$txtwht}
  pid=$!

  echo -en "$style$message"

  while [ $(ps -eo pid | grep $pid) ]; do
    printf '.'
    sleep 0.5
  done

  # This is blocking
  # Try to actually benefit from the async nature of bg jobs
  wait $pid || fail
  status=$?

  if [ $status = 0 ]; then
    success
  else
    fail
  fi
}

# Start the output with an empty line (looks better with spacing)
#
begin() {
  echo ""
}

# Wrapper to either run the command verbosely, inline,
# or silently, in the background
#
__run() {
  if [ $VERBOSE ]; then
    echo -e "$bldylw\n$2$txtrst"
    eval $1
  else
    (eval $1) &
    __progress "$2"
  fi
}

# If we reach this step, the deploy was most likely a success
#
finish() {
  echo "$bldgrn"
  echo "$APP deployed" | tr '[:lower:]' '[:upper:]'
  echo "$txtrst"
}

# Loads the correct deliver strategy
#
load_strategy() {
  local strategies_path="$BASE_PATH/strategies"
  local strategies=$(ls $strategies_path)
  if [[ ! $strategies =~ $STRATEGY ]]; then
    error "This strategy does not exist. To see a list of strategies, use the -s|--strategies flag."
  else
    . "$strategies_path/$STRATEGY"
  fi
}

# Used internally, to wrap commands which need $SILENCE
#
__exec() {
  eval "$1 $SILENCE"
}
